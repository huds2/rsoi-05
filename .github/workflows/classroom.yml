name: GitHub Classroom Workflow
on:
  push:
    branches: [ master ]
  pull_request:
    types: [opened, reopened]
jobs:
  build:
    name: Build images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU for Docker build
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build images
        timeout-minutes: 10
        run: |
          docker build . -f flights/Dockerfile -t flights:latest
          docker build . -f tickets/Dockerfile -t tickets:latest
          docker build . -f bonuses/Dockerfile -t bonuses:latest
          docker build . -f gateway/Dockerfile -t gateway:latest

      - name: Login to docker registry
        run: docker login -u ${{ secrets.REGISTRY_LOGIN }} -p ${{ secrets.REGISTRY_PASSWORD }} registry.huds.su

      - name: Tag images
        run: |
          docker tag flights:latest registry.huds.su/flights:latest
          docker tag tickets:latest registry.huds.su/ticktes:latest
          docker tag bonuses:latest registry.huds.su/bonuses:latest
          docker tag gateway:latest registry.huds.su/gateway:latest

      - name: Push images
        timeout-minutes: 10
        run: |  
          docker push registry.huds.su/flights:latest
          docker push registry.huds.su/ticktes:latest
          docker push registry.huds.su/bonuses:latest
          docker push registry.huds.su/gateway:latest

  deploy:
    name: Deploy to k8s
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy
        uses: WyriHaximus/github-action-helm3@v3
        with:
          exec: |
            helm repo add gruntwork https://helmcharts.gruntwork.io
            helm repo update

            helm upgrade postgres oci://registry-1.docker.io/bitnamicharts/postgresql -f booking-system/postgres.yml --install --wait --atomic

            helm upgrade flights gruntwork/k8s-service -f booking-system/flights.yml --install --wait --atomic --set "envVars.RSA_PUB=${{ secrets.RSA_PUB }}"
            helm upgrade tickets gruntwork/k8s-service -f booking-system/tickets.yml --install --wait --atomic --set "envVars.RSA_PUB=${{ secrets.RSA_PUB }}"
            helm upgrade bonuses gruntwork/k8s-service -f booking-system/bonuses.yml --install --wait --atomic --set "envVars.RSA_PUB=${{ secrets.RSA_PUB }}"
            helm upgrade gateway gruntwork/k8s-service -f booking-system/gateway.yml --install --wait --atomic --set "envVars.RSA_PUB=${{ secrets.RSA_PUB }}"

          kubeconfig: '${{ secrets.KUBECONFIG }}'
          overrule_existing_kubeconfig: "true"

  test:
    name: Autograding
    needs: [ deploy ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Run API Tests
        uses: matt-ball/newman-action@master
        with:
          collection: v1/postman/collection.json
          environment: v1/postman/environment.json
          delayRequest: 100
          reporters: '[ "cli" ]'

      - uses: education/autograding@v1
        id: autograder
        continue-on-error: true
